name: Java @ Build
description: '[Composite] Build a Java project without testing or artifact management'

inputs:
  java-version:
    description: 'Java version to use'
    required: false
    default: '17'
  java-distribution:
    description: 'Java distribution to use'
    required: false
    default: 'temurin'
  maven-version:
    description: 'Maven version to use'
    required: false
    default: '3.9.6'
  build-command:
    description: 'Custom build command to execute'
    required: false
    default: 'mvn -B clean compile'
  arguments:
    description: 'Additional arguments for the build command'
    required: false
    default: ''
  cache-enabled:
    description: 'Whether to use Maven dependency caching'
    required: false
    default: 'true'
  working-directory:
    description: 'Working directory where the build should run'
    required: false
    default: '.'

runs:
  using: composite
  steps:
    - name: Set up JDK ${{ inputs.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.java-distribution }}
        cache: ${{ inputs.cache-enabled == 'true' && 'maven' || '' }}

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: ${{ inputs.maven-version }}

    # TODO O maven-settings.xml deve vir do repositório da aplicação pois pode existir mirrors privados
    - name: Configure Maven Settings
      shell: bash
      run: |
        echo "MAVEN_OPTS=-Xmx4g" >> $GITHUB_ENV
        mkdir -p ~/.m2
        echo "<settings><mirrors><mirror><id>central</id><url>https://repo1.maven.org/maven2</url><mirrorOf>central</mirrorOf></mirror></mirrors></settings>" > ~/.m2/settings.xml

    - name: Build with Maven
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        ${{ inputs.build-command }} ${{ inputs.arguments }}