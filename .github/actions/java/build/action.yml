name: Java @ Build
description: '[Composite] Build a Java project using a pre-configured Docker container with SDKman'

inputs:
  java-version:
    description: 'Java version to use'
    required: false
    default: '17'
  java-distribution:
    description: 'Java distribution to use'
    required: false
    default: 'temurin'
  maven-version:
    description: 'Maven version to use'
    required: false
    default: '3.9.6'
  build-command:
    description: 'Custom build command to execute'
    required: false
    default: 'mvn -B clean compile'
  arguments:
    description: 'Additional arguments for the build command'
    required: false
    default: ''
  cache-enabled:
    description: 'Whether to use Maven dependency caching'
    required: false
    default: 'true'
  working-directory:
    description: 'Working directory where the build should run'
    required: false
    default: '.'
  maven-settings-path:
    description: 'Path to maven settings.xml file in the repository'
    required: false
    default: 'maven-settings.xml'

runs:
  using: 'composite'
  steps:
    - name: Setup Maven Cache
      uses: actions/cache@v3
      if: inputs.cache-enabled == 'true'
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ inputs.java-version }}-${{ inputs.maven-version }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-${{ inputs.java-version }}-${{ inputs.maven-version }}-
          ${{ runner.os }}-maven-

    - name: Setup Maven Settings
      shell: bash
      run: |
        mkdir -p ~/.m2
        if [ -f "${{ github.workspace }}/${{ inputs.maven-settings-path }}" ]; then
          cp "${{ github.workspace }}/${{ inputs.maven-settings-path }}" ~/.m2/settings.xml
          echo "Using custom Maven settings from repository at ${{ inputs.maven-settings-path }}"
        else
          echo "<settings><mirrors><mirror><id>central</id><url>https://repo1.maven.org/maven2</url><mirrorOf>central</mirrorOf></mirror></mirrors></settings>" > ~/.m2/settings.xml
          echo "Using default Maven settings"
        fi

    # TODO Mockado a versÃ£o do Temurin
    - name: Build application
      uses: docker://euthiagodealmeida/java-builder:latest
      with:
        args: >
          -c "whoami && pwd &&
          ls -lah &&
          echo 'Setting up Java ${{ inputs.java-version }}-${{ inputs.java-distribution }}' &&
          sdk install java 17.0.15-tem || true &&
          sdk use java 17.0.15-tem &&
          echo 'JDK setup successfully' &&
          sdk current java &&
          echo 'Setting up Maven ${{ inputs.maven-version }}' &&
          sdk install maven ${{ inputs.maven-version }} || true &&
          sdk use maven ${{ inputs.maven-version }} &&
          echo 'Maven setup successfully' &&
          sdk current maven &&
          export MAVEN_OPTS='-Xmx4g' &&
          cd $GITHUB_WORKSPACE/${{ inputs.working-directory }} &&
          echo 'Executing: ${{ inputs.build-command }} ${{ inputs.arguments }}' &&
          ${{ inputs.build-command }} ${{ inputs.arguments }}"